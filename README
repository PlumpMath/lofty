Copyright 2010, 2011, 2012, 2013
Raffaello D. Di Napoli

This file is part of Application-Building Components (henceforth referred to as
ABC).

ABC is free software: you can redistribute it and/or modify it under the terms
of the GNU General Public License as published by the Free Software Foundation,
either version 3 of the License, or (at your option) any later version.

ABC is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
ABC. If not, see <http://www.gnu.org/licenses/>.
--------------------------------------------------------------------------------

Introduction
------------

Application-Building Components (ABC) is a framework for C++11 designed and
written with these principles in mind:

•  Full support for text-based and GUI applications, as well as service-oriented
   architectures;
•  Intelligent usage of C++11 features and interoperability with the C++11 STL;
•  Extended run-time debugging support, with aims to reach or exceed that of
   languages such as Java or Python, featuring full stack traces (including
   arguments and locals) and a diverse and semantically-rich exception class
   hierarchy;
•  Modern I/O and IPC classes, inspired by Python’s library;
•  Compiler-enforced type safety (no void pointers, no C-style variadic
   functions).


Compatibility
-------------

ABC is in full development, so the compatibility can and will change over time
(hopefully expanding).

Supported build systems:

•  GNU toolchain
   •  GCC 4.3.0 to 4.7.x (4.8.x to be tested)
   •  binutils (version to be determined - anything from 2010 on should work)
   •  make (version to be determined - 3.80 should suffice)

•  Microsoft toolchain
   •  Visual C++ 10 (MSC 16 / Visual Studio 2010)
   •  MSBuild 4.0 (Visual Studio 2010)

Supported operating systems:

•  GNU/Linux - specifically GCC/glibc/GNU/Linux, due to some really cool
   exception handling-related features;
•  Microsoft Windows - temporarily only via Visual C++ 10, which means only
   Windows XP and later versions are supported.

